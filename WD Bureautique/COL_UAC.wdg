#To edit and compare internal_properties, use WINDEV integrated tools.
#Internal properties refer to the properties of controls in windows, reports, etc.
info :
 name : COL_UAC
 major_version : 28
 minor_version : 0
 type : 7
 description : ""
 subtype : 0
procedure_set :
 identifier : 0x1a16c94e012fd8d2
 internal_properties : CAAAAAgAAABGLu41kG7fjQV3iS4F72qmnKaNh5694reolNKIW0iw
 code_elements :
  type_code : 31
  p_codes :
   -
     internal_properties : CAAAAAgAAAC7/aL5CRYmxs+cj0ok74BJo/18zEiNE/vfEjOAWAWvP8FsbljDYFE9OPNzhAgm7b73GupgoHTKbLaVALVICPYMRTlMs83k4ECcBjqU/oqwwqOR0OuCo+7veCBlfH8ZrxwtPT/J6isaItTmB1w=
     code : |1-
      // Structure utilisée par l'API ShellExecuteEx
      SHELLEXECUTEINFO est une structure
      	cbSize est un entier sur 4 octets
      	fMask  est un entier sur 4 octets
      	hwnd est un entier systeme
      	lpVerb est un entier système
      	lpFile est un entier système
      	lpParameters est un entier système
      	lpDirectory  est un entier système
      	nShow est un entier sur 4 octets
      	hInstApp est un entier systeme
      	lpIDList est un entier systeme
      	lpClass est un entier système
      	hkeyClass  est un entier système
      	dwHotKey est un entier sur 4 octets
      	hIcon_hMonitor est un entier système
      	hProcess est un entier système
      fin
      
      constant
      	// Constantes de paramétrage de la structure SHELLEXECUTEINFO
      	SEE_MASK_DEFAULT 		= (0x00000000)			// Utiliser les valeurs par défaut
      	SEE_MASK_CLASSNAME 		= (0x00000001)			// Utiliser la valeur du membre nLpClass
      	SEE_MASK_CLASSKEY 		= (0x00000003)			// Utiliser la valeur du membre nHkeyClass (prioritaire sur SEE_MASK_CLASSNAME)
      	SEE_MASK_IDLIST 		= (0x00000004)			// Utiliser la valeur du membre nLpIDList (doit pointer sur une structure de type ITEMLIST)
      	SEE_MASK_HOTKEY 		= (0x00000020)			// Utiliser le raccourci clavier du membre nDwHotKey
      	SEE_MASK_NOCLOSEPROCESS = (0x00000040)			// Le membre nHProcess recevra le handle du processus lancé, celui ci devra être fermé par un appel à CloseHandle
      	SEE_MASK_NOASYNC 		= (0x00000100)			// Attend que l'exécution soit commencée pour rendre la main
      	SEE_MASK_DOENVSUBST 	= (0x00000200)			// Etendre les variables d'environnement de nLpDirectory ou nLpFile
      	SEE_MASK_FLAG_NO_UI 	= (0x00000400)			// Ne pas afficher de message en cas d'erreur
      	SEE_MASK_NO_CONSOLE 	= (0x00008000)			// Le processus créé héritera de la console de son appelant
      	SEE_MASK_HMONITOR 		= (0x00200000)			// Permet d'indiquer quel écran utiliser sur un système multi-écrans (dans le membre nHIcon_hMonitor)
      	SEE_MASK_FLAG_LOG_USAGE = (0x04000000)			// Compte le nombre de lancement de l'application (à partir de XP, les applications les plus fréquemment lancées sont mises en avant dans le menu démarrer) 
      	
      	// Constantes de mode d'affichage des fenêtres
      	SW_HIDE 				= 0						// Cache la fenêtre
      	SW_SHOWMAXIMIZED 		= 3						// Affiche la fenêtre maximisée
      	SW_SHOWMINIMIZED 		= 2						// Affiche la fenêtre minimisée
      	SW_SHOWNOACTIVATE 		= 4						// N'active pas la fenêtre
      	SW_SHOWNORMAL  			= 1						// Affiche la fenêtre
      	
      fin
     type : 720896
  procedures :
   -
     name : UACDisponible
     internal_properties : CAAAAAgAAADCMmt3t8EV6ywP3DITmIdcsbRvkQSj5iUq2nh0nxnWu0TETJBN+MCwaC7pglpBy43Wj3X8Vcu1HN0QAiF0qvrg25dYdWQxxTUYl8lJDyuvC3y/nA5OwUrZUX5J0U6fOyJAl7gENaiIQ0tW1OOCuPPe9VPfSsBFJMuGcxIEm2fZDOvF9WcAoc470/g6njN7BuJ+CqsqxW1Da2KBxx8kazsVCwgw5Dyl
     procedure_id : 1879911231338371297
     type_code : 15
     code : |1-
      // Résumé : Détermine si l'UAC existe sur le système d'exploitation en cours
      // Valeur de retour :
      // 	booléen : Vrai si l'UAC existe, faux sinon
      //
      PROCEDURE UACDisponible() : booléen
      
      	// L'UAC n'existe que sous Windows, sur les plateformes NT
      	si SysVersionWindows(sysVersionPlateForme) <> "NT" alors renvoyer faux
      	
      	// L'UAC n'existe qu'à partir de Windows Vista
      	si val( SysVersionWindows(sysVersionNuméro) ) < 6 ALORS renvoyer faux
      
      // Le système supporte l'UAC
      renvoyer vrai
     type : 458752
   -
     name : UACActif
     procedure_id : 1879911231338436833
     type_code : 15
     code : |1-
      // Résumé : Détermine si le mécanisme de l'UAC est actif
      // Valeur de retour :
      // 	booléen : Vrai si l'UAC est activé, Faux sinon
      //
      PROCEDURE UACActif() : booléen
      
      	// Le paramétrage de l'UAC est conservé dans une clé de registre
      	bUACActive est un booleen = UACDisponible _et_ ( val( registrelit("HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System", "EnableLUA") ) = 1 )
      
      renvoyer bUACActive
     type : 458752
   -
     name : ExéPrivilègesElevés
     internal_properties : CAAAAAgAAAASUMb1vsQLXcRgV8R9eVkqBzJC9BSa6sOnR88c8PxkQmntefLIQL9WFRVRbQlaRA/ZveYUebWk3ZcuIUzz/eT2KFT+le9zG/lhUYCVSIbHrI7s0DhbpngXOZcEp3CAtNLjwe8pc4jyg7T+ayuZ3Yy+eS2zvCP+JMjCCevaRQLu9DK+zq/Fi2DFlxkr145bVSsNfhx5dx3T9vW4zYUrWevqVKlkOrO6VnWiGi6btdbAo8l9P8K0kaZMY2UHWnIG1JoaP8h0tAJM04i6+G65tw5YHA/gwOJLVZrUVVUgV4QvAY7D4Ot4W9XrTpl8Er0sd4sBzpgP6HQVGA==
     procedure_id : 1879911231338502369
     type_code : 15
     code : |1-
      // Résumé : Détermine si l'application a été créée avec des privilèges élevés ou non
      // Valeur de retour :
      // 	booléen : Vrai si l'application est en privilèges élevés, faux sinon
      //	En cas d'erreur, ErreurDétectée renvoie Vrai et ErreurInfo donne le détail de l'erreur
      //
      PROCEDURE ExéPrivilègesElevés() : booléen
      
      	TOKEN_READ est un entier sur 4 octets = 0x0008 + 0x00020000
      	TokenElevation est un entier sur 4 octets = 20
      	TokenElevationType est un entier sur 4 octets = 18
      	TokenElevationTypeDefault est un entier sur 4 octets = 1
      	TokenElevationTypeFull est un entier sur 4 octets = 2
      	
      	
      	hProcess est un entier systeme
      	hToken est un entier système
      	tTokenElevation est un entier sur 4 octets
      	eElevationType est un entier sur 4 octets
      	dwTokenLength  est un entier sur 4 octets
      	
      	// Lit le jeton de sécurité (token) du processus courant
      	hProcess = API("kernel32", "GetCurrentProcess")
      	si api("advapi32", "OpenProcessToken", hProcess, TOKEN_READ, &hToken) = faux alors
      		ErreurDéclenche(1, "Impossible de lire les informations de sécurité du process.")
      		renvoyer faux
      	fin
      	
      	// Demande le paramètre d'élévation contenu dans le token
      	si api("advapi32", "GetTokenInformation", hToken, TokenElevation, &tTokenElevation, dimension(tTokenElevation), &dwTokenLength) = faux alors
      		ErreurDéclenche(2, "Impossible de lire le paramètre d'élévation de privilèges du process.")
      		RENVOYER Faux
      	FIN
      	
      	si tTokenElevation <> 0 alors
      		si api("advapi32", "GetTokenInformation", hToken, TokenElevationType, &eElevationType, dimension(eElevationType), &dwTokenLength)=faux alors
      			ErreurDéclenche(3, "Impossible de lire la valeur du paramètre d'élévation de privilèges du process.")
      			renvoyer faux
      		sinon
      			si eElevationType _dans_ ( TokenElevationTypeDefault, TokenElevationTypeFull ) alors
      				renvoyer vrai
      			sinon
      				renvoyer faux
      			FIN
      		fin
      	fin
      
      renvoyer faux
     type : 458752
   -
     name : UtilisateurEstAdministrateur
     internal_properties : CAAAAAgAAACU75AjK3J28UgIV1HWhOse+caeepaxDZYK3ORBMdoqi3yZO1qZhNDpAloWDdaiFWrIcDRlNkIBw6QwQT58KGyRAzTqAsSeExJqYv62QMn6YQLfxaH5ArfUUD3Y0neQAqunbg2fQEUJQnRHxeaPb5J/6L5EJeN0f6Sv5LOP9ASkmRnrE2ESrRQB75x+htvfWn68U7m0b2Q=
     procedure_id : 1879911231338567905
     type_code : 15
     code : |1-
      // Résumé : Détermine si l'utilisateur courant est un membre du groupe Administrateur
      // Valeur de retour :
      // 	booléen : Vrai si l'utilisateur fait partie du groupe local "Administrateurs", Faux sinon
      //
      PROCEDURE UtilisateurEstAdministrateur() : booléen
      
      	bAdmin est un booleen = api("shell32", "IsUserAnAdmin")
      
      renvoyer bAdmin
     type : 458752
   -
     name : LanceAppliAvecElévation
     internal_properties : CAAAAAgAAAAWYRJk3mrS2Wgo5/mGhOuOEaY2Sp6RVbYytLxB2SKiAwxBy3KZ3KBBMgom5XYyZVowQNwlzmK504wYKd6kMESZQ7z6ymQW4xoKku4CLMXunV5TOXXdppOgfFEc3nOc5kfDcoHTFKmVTkBbiZJ7m9b75FLYiXe4m0A7uKd7cLAYBZVfhyWWYYBdC2AC8tfbjs58IDsy7eY=
     procedure_id : 1879911231338633441
     type_code : 15
     code : |1-
      // Résumé : Lance une application en réalisant une élévation de privilèges
      // Paramètres :
      //	sLigneCommande (chaîne UNICODE) : Ligne de commande à exécuter
      //	sParametres (chaîne UNICODE) : Mode de lancement du programme
      //	nMode (entier - valeur par défaut=1) : indique s'il faut attendre la fin du processus pour rendre la main
      //	nAttenteFin (entier - valeur par défaut=1) : répertoire de travail (chaine vide = répertoire en cours)
      //	sRépertoireTravail (chaîne UNICODE - valeur par défaut="") : Répertoire de lancement
      // Valeur de retour :
      // 	booléen : Vrai si l'application a été lancée correctement, faux en cas d'erreur
      //
      PROCEDURE LanceAppliAvecElévation(local sLigneCommande est une chaine, local sParametres est une chaine, local nMode est un entier = exeActif, local nAttenteFin est un entier = exeBloquant, local sRépertoireTravail est une chaine = "") : booléen
      
      RENVOYER _LanceAppliUAC(sLigneCommande, sParametres, nAttenteFin, nMode, sRépertoireTravail, "runas")
     type : 458752
   -
     name : LanceAppliUAC
     procedure_id : 1879911231338698977
     type_code : 15
     code : |1-
      // Résumé : Lance une application en réalisant une élévation de privilèges
      // Paramètres :
      //	sLigneCommande (chaîne ANSI) :Ligne de commande à exécuter
      //	sParametres (chaîne ANSI) :Mode de lancement du programme
      //	nMode (entier - valeur par défaut=1) :indique s'il faut attendre la fin du processus pour rendre la main
      //	nAttenteFin (entier - valeur par défaut=1) :répertoire de travail (chaine vide = répertoire en cours)
      //	sRépertoireTravail (chaîne ANSI - valeur par défaut="") : Répertoire de lancement
      // Valeur de retour :
      // 	booléen : Vrai si l'application a été lancée correctement, faux en cas d'erreur
      //
      PROCEDURE LanceAppliUAC(local sLigneCommande est une chaine, local sParametres est une chaine, local nMode est un entier = exeActif, local nAttenteFin est un entier = exeBloquant, local sRépertoireTravail est une chaine = "") : booléen
      
      renvoyer _LanceAppliUAC(sLigneCommande, sParametres, nAttenteFin, nMode, sRépertoireTravail, "open")
     type : 458752
   -
     name : LanceAppliPrivilègesRestreints
     internal_properties : CAAAAAgAAAAX86+9fIDiIWsFj1sHPLtuuxyNYistegM08U757ai7PWkqRsynz5mctKfC/tm+8+5abCf+clK/aCDqsjEPzZkl3AQfi+5LIdLxYLsW6ijvJd1YkoCiUpY+yyLGuki7yV6xpxc42FOSSK2ybSF1uwemuGMT8V0SXHaokxUyLPQN5GLhGYfWpjuuafkpQFeNgE8wtKm3XHZlkeyRUg6kX/RqlQSK/WPhFfuZksKPniBifFTPSZ1NH46iFdgGhh1Tg9fIBCJ1KsOE9RoYFA==
     procedure_id : 1879911231338764513
     type_code : 15
     code : |1-
      // Résumé : Lance une application en revenant aux privilèges restreints
      // Pour revenir à des privilèges restreints, on fait lancer l'application par le planificateur de tâches.
      // A partir de Windows Vista, les tâches planifiées possèdent en effet une option supplémentaire pour indiquer
      // si l'application doit être lancée en privilèges élevés ou restreints.
      // Cette option n'est pas disponible dans la structure TâchePlanifiée du WLangage.
      // Pour résoudre ce problème, la tâche planifiée est créée en utilisant l'utilitaire schtasks.exe (livré avec Windows)
      // qui sert à piloter le planificateur de tâches.
      // Paramètres :
      //	sNomAppli (chaîne ANSI) : Ligne de commande à exécuter
      // Valeur de retour :
      // 	booléen : Vrai si l'application a été lancée correctement, faux en cas d'erreur
      //
      PROCEDURE LanceAppliPrivilègesRestreints(local sNomAppli est une chaine) : booléen
      
      	sContenuXML est une chaine = [
      	<?xml version="1.0" ?>
      	<Task xmlns="http://schemas.microsoft.com/windows/2004/02/mit/task">
      		<RegistrationInfo>
      			<Date>2005-10-11T13:21:17-08:00</Date>
      			<Author></Author>
      			<Version>1.0.0</Version>
      			<Description></Description>
      		</RegistrationInfo>
      		<Triggers>
      			<TimeTrigger>
      				<StartBoundary>2005-10-11T13:21:17-08:00</StartBoundary>
      				<EndBoundary>2006-01-01T00:00:00-08:00</EndBoundary>
      				<Enabled>true</Enabled>
      				<ExecutionTimeLimit>PT5M</ExecutionTimeLimit>
      			</TimeTrigger>
      		</Triggers>
      		<Principals>
      			<Principal>
      				<LogonType>InteractiveToken</LogonType>
      			</Principal>
      		</Principals>
      		<Settings>
      			<Enabled>true</Enabled>
      			<AllowStartOnDemand>true</AllowStartOnDemand>
      			<AllowHardTerminate>true</AllowHardTerminate>
      		</Settings>
      		<Actions>
      			<Exec>
      				<Command>[%sNomAppli%]</Command>
      			</Exec>
      		</Actions>
      	</Task>
      	]
      	
      	sNomTache est une chaine = "LanceAppli"+donneguid()
      	
      	sFichierTemp est une chaine = fFichierTemp("XML")
      	fSauveTexte(sFichierTemp,sContenuXML)
      	
      	// Création de la tâche
      	sLigneCommande est une chaine = "schtasks.exe /create /XML ""[%sFichierTemp%]"" /tn [%sNomTache%]"
      	si LanceAppli(sLigneCommande, exeIconise, exeBloquant) = Faux ALORS
      		renvoyer faux
      	FIN
      	
      	// Supprime le fichier de description
      	fSupprime(sFichierTemp)
      	
      	// Exécution forcée
      	sLigneCommande = "schtasks.exe /run /tn [%sNomTache%]"
      	si LanceAppli(sLigneCommande, exeIconise, exeBloquant)=faux ALORS
      		renvoyer faux
      	FIN
      
      	// Effacement de la tâche
      	sLigneCommande = "schtasks.exe /delete /f /tn [%sNomTache%]"
      
      renvoyer LanceAppli(sLigneCommande,exeIconise,exeBloquant)
     type : 458752
   -
     name : _LanceAppliUAC
     internal_properties : CAAAAAgAAAC9RR5IIHP+iyUAXcvm5/MXyXrmyBMAMv9IB1GTYb6R228EBKYdzbfavg2wO9PmkUnWuh1B4ClpvfbU6lA/XaE1/DwX8+ZLKcpZmOPmUoBvPeU4MjDCitYOu2IGYsi7MW5RL38wIB9WhKGO+b3ZN/saNF8/7WmOwGJMD3G+IBAhyH7tBQNSIr8q7UUlrGuZpGprQ+I70E9cSexFuGsr/iuEh/70W1kLK4lDNFTdtFLC5KkA9nTEE9Q4rnPrbhFWVY14gbWUuZPWiHCuug==
     procedure_id : 1879911231338830049
     type_code : 15
     code : |1-
      // Résumé : Fonction interne utilisée par LanceAppliUAC et LanceAppliAvecElevation
      //
      PROCEDURE PRIVEE _LanceAppliUAC(local sLigneCommande est une chaine, local sParamètres est une chaîne, local nAttenteFin est un entier, local nMode est un entier, local sRépertoireTravail est une chaine, local sVerbe est une chaine)
      
      	// Initialise la structure de l'API ShellExecuteEx
      	stLanceAppli est un SHELLEXECUTEINFO
      	stLanceAppli.cbSize = Dimension(stLanceAppli)
      	
      	stLanceAppli.lpFile = &sLigneCommande
      	stLanceAppli.lpParameters = &sParamètres
      	stLanceAppli.lpVerb = &sVerbe
      	stLanceAppli.fMask = SEE_MASK_DEFAULT
      	
      	// Traitement du paramètre de lancement bloquant
      	SI nAttenteFin = exeBloquant ALORS
      		stLanceAppli.fMask = SEE_MASK_NOCLOSEPROCESS
      	FIN
      	
      	// Traitement du mode de lancement
      	SELON nMode
      		CAS exeActif
      			stLanceAppli.nShow = SW_SHOWNORMAL
      		CAS exeIconise
      			stLanceAppli.nShow = SW_SHOWMINIMIZED
      		CAS exeInactif
      			stLanceAppli.nShow = SW_SHOWNORMAL + SW_SHOWNOACTIVATE
      		CAS exeMaximise
      			stLanceAppli.nShow = SW_SHOWMAXIMIZED
      	FIN
      	SI sRépertoireTravail <> "" ALORS
      		stLanceAppli.lpDirectory = &sRépertoireTravail
      	FIN
      	
      	// Appel de l'API
      	<compile si ConfigurationUNICODE>
      	bRet est un booleen = api("shell32", "ShellExecuteExW", &stLanceAppli)
      	<sinon>	
      	bRet est un booleen = api("shell32", "ShellExecuteExA", &stLanceAppli)
      	<FIN>
      	
      	SI bRet _ET_ nMode = exeActif ALORS
      		
      		// S'il faut attendre la fin de l'exe
      		SI stLanceAppli.hProcess <> 0 ALORS
      		
      			nExitCode est un entier sur 4 octets
      			tantque API("kernel32", "GetExitCodeProcess", stLanceAppli.hProcess, &nExitCode)
      				SI nExitCode <> 259 ALORS SORTIR
      				Multitâche(-100)
      			FIN
      		FIN
      	FIN
      
      renvoyer bRet
     type : 458752
  procedure_templates : []
  property_templates : []
 code_parameters :
  internal_properties : CAAAAAgAAACVGQgYbalU7DKC3oH4ItDrjtcTHXXV/EuH8q0IbhyQlw==
  original_name : COL_SansNom1
resources :
 string_res :
  identifier : 0x10d9977d0368cb73
  internal_properties : CAAAAAgAAACm76HWfKGWp33VjXInA4cRlqArlgTTA862QGt72W2ld5Y=
custom_note :
 internal_properties : CAAAAAgAAABtB9HWVzrXO2+4NDRVK0vmzaNKrCKqH1DBX30lMmGZ
